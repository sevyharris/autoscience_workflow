# Autoscience Project Snakemake Workflow
import os


os.environ['DFT_DIR'] = os.path.abspath(os.path.join(workflow.basedir, '..', 'results', 'dft'))

rmg_runs_dir = ''
rmg_input_file =  ''
rule run_rmg:
    shell:
        "echo hello"

rule get_ranked_reactions:
    shell:
        "echo hello"

rule get_ranked_species:
    shell:
        "echo hello"


try:
    species_index = config['species_index']
except KeyError:
    species_index = 30
rule species_thermo:
    # This should probably be renamed to something like calc_conformers
    conda:
        'envs/tst_env.yaml'
    shell:
        """
        bash -c '
            . $HOME/.bashrc
            conda activate /work/westgroup/harris.se/tst_env
            sbatch scripts/run_species_thermo.sh {species_index}
            conda deactivate'
        """

rule get_lowest_conformer:
    shell:
        """
        bash -c '
            . $HOME/.bashrc
            conda activate /work/westgroup/harris.se/tst_env
            sbatch scripts/run_get_lowest_conformer.sh {species_index}
            conda deactivate'
        """
rule run_rotors:
    shell:
        """
        bash -c '
            . $HOME/.bashrc
            conda activate /work/westgroup/harris.se/tst_env
            python scripts/species_rotors.py {species_index}
            conda deactivate'
        """

rule setup_arkane_thermo:
    shell:
        """
        bash -c '
            . $HOME/.bashrc
            conda activate /work/westgroup/harris.se/tst_env
            python scripts/make_arkane_thermo_input.py {species_index}
            conda deactivate'
        """


rule species_list:
    conda:
        'envs/tst_env.yaml'
    shell:
        """
        python scripts/generate_species_list.py
        """

rule reaction_list:
    conda:
        'envs/tst_env.yaml'
    shell:
        """
        python scripts/generate_reaction_list.py
        """
